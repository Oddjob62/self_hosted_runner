name: "Self-Hosted Runner"

on:
  workflow_dispatch:
    secrets:
      tenant_id:
        required: true
      service_principal_client_id:
        description: 'The service principal client ID'
        required: true
      service_principal_client_secret:
        description: 'The service principal client secret'
        required: true
      gh_pat:
        description: 'The Github access token'
        required: true
    inputs:
      CreateOrDelete:
        type: choice
        description: Create/Delete
        options: 
        - Create
        - Delete

env:
  RUNNER_RG: SelfhostedTest
  VNET_NAME: vnet1
  HUB_SUB: ff65e97e-c6be-4f35-b6b7-e52ce88bf5b2
  RUNNER_NAME: TestRunner
  
jobs:
  build-runner:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: az login
        run: |
          az login --tenant ${{ secrets.tenant_id }} \
            --service-principal \
            -u ${{ secrets.service_principal_client_id }} \
            -p ${{ secrets.service_principal_client_secret }}
            
      - name: Build Foundation
        if: github.event.inputs.CreateOrDelete == 'Create'
        run: |
          az group create -l uksouth -n $RUNNER_RG
          az network vnet create --address-prefixes 10.0.0.0/16 -n $VNET_NAME -g $RUNNER_RG  --subnet-name default --subnet-prefixes 10.0.0.0/24

      - name: Get Token
        id: get-token
        if: github.event.inputs.CreateOrDelete == 'Create'
        run: |
          echo ${{ secrets.gh_pat }} | gh auth login --with-token
          token=$(gh api -X POST -H "Accept: application/vnd.github.v3+json" /repos/$GITHUB_REPOSITORY/actions/runners/registration-token | jq .token -r)
          echo "::set-output name=runnertoken::$token"

      - name: Replace tokens
        if: github.event.inputs.CreateOrDelete == 'Create'
        run: |
          sed -i "s/replacetoken/${{ steps.get-token.outputs.runnertoken }}/g" scripts/install-runner.sh
          sed -i "s#replacerepo#Oddjob62/self_hosted_runner#g" scripts/install-runner.sh
          sed -i "s/replacelabel/production/g" scripts/install-runner.sh
          ls -l

      - name: Build Runner VM
        if: github.event.inputs.CreateOrDelete == 'Create'
        run: | 
          subnetId=$(az network vnet subnet show -g $RUNNER_RG -n "default" --vnet-name $VNET_NAME -o tsv --query "id")
          if [[ $(az vm list -g "${{ inputs.runner_rg }}" --query "[?name=='${{ inputs.runner_name }}'].name" -o tsv) ]]
          then
          az vm create \
            -g $RUNNER_RG \
            -n $RUNNER_NAME \
            --size Standard_B2ms \
            --assign-identity "[system]" \
            --image Canonical:0001-com-ubuntu-server-focal:20_04-lts:20.04.202205100 \
            --custom-data ./scripts/install-runner.sh \
            --generate-ssh-keys \
            --subnet $subnetId \
            --nic-delete-option delete \
            --os-disk-delete-option delete \
            --nic-delete-option delete \
            --os-disk-delete-option delete \
            --nsg ""
          else
          echo "vm already"
          fi
            
      - name: Create Policy Exemptions for Runner
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: $RUNNER_RG
          template: policy-exemptions/runner-policy-exemptions.json
          parameters: vmName=$RUNNER_NAME builtinAssignment=$HUB_SUB
          
      - name: Remove Policy Exemptions for Runner
        shell: pwsh
        run: |
          ./policy-exemptions/remove-runnerexemptions.ps1 `
            - resourceGroupName = $RUNNER_RG `
            - runnerName = $RUNNER_NAME
      

      - name: Delete Runner VM
        if: github.event.inputs.CreateOrDelete == 'Delete'
        run: | 
          az vm delete \
            --name $RUNNER_NAM \
            --resource-group $RUNNER_RG \
            --yes
