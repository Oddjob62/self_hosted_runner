name: "Self-Hosted Runner"

on:
  workflow_call:
    inputs:
      action:
        type: string
        required: true
      spoke_subscription_id:
        type: string
        description: The subscription id of spoke resources
        required: true
        default: ff65e97e-c6be-4f35-b6b7-e52ce88bf5b2
      runner_name:
        type: string
        description: Name of the runner to apply the action to
        required: true
        default: TestRunner
      runner_rg:
        type: string
        description: Runner resource group
        required: true
        default: SelfhostedTest
    secrets:
      tenant_id:
        required: true
      service_principal_client_id:
        description: 'The service principal client ID'
        required: true
      service_principal_client_secret:
        description: 'The service principal client secret'
        required: true
      gh_pat:
        description: 'The Github access token'
        required: true
        
env:
  RUNNERRG: SelfhostedTest
  VNETNAME: vnet1
  RUNNERNAME: TestRunner
  
jobs:
  build-runner:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Values
        id: values
        run: |
          echo "::set-output name=spoke_subscription_id::${{ inputs.spoke_subscription_id }}"

      - name: az login
        run: |
          az login --tenant ${{ secrets.tenant_id }} \
            --service-principal \
            -u ${{ secrets.service_principal_client_id }} \
            -p ${{ secrets.service_principal_client_secret }}
          az account set --subscription ${{ steps.values.outputs.spoke_subscription_id }}
            
      - name: Build Foundation
        if: inputs.action == 'Create'
        run: |
          az group create -l uksouth -n $RUNNERRG
          az network vnet create --address-prefixes 10.0.0.0/16 -n $VNETNAME -g $RUNNERRG  --subnet-name default --subnet-prefixes 10.0.0.0/24

      - name: Get Token
        id: get-token
        if: inputs.action == 'Create'
        run: |
          echo ${{ secrets.gh_pat }} | gh auth login --with-token
          token=$(gh api -X POST -H "Accept: application/vnd.github.v3+json" /repos/$GITHUB_REPOSITORY/actions/runners/registration-token | jq .token -r)
          echo "::set-output name=runnertoken::$token"

      - name: Replace tokens
        if: inputs.action == 'Create'
        run: |
          sed -i "s/replacetoken/${{ steps.get-token.outputs.runnertoken }}/g" scripts/install-runner.sh
          sed -i "s#replacerepo#Oddjob62/self_hosted_runner#g" scripts/install-runner.sh
          sed -i "s/replacelabel/production/g" scripts/install-runner.sh
          ls -l

      - name: Build Runner VM
        if: inputs.action == 'Create'
        run: | 
          if [[ $(az vm list --query "[?name=='$VMNAME']") == '' ]]; then
          subnetId=$(az network vnet subnet show -g $RUNNERRG -n "default" --vnet-name $VNETNAME -o tsv --query "id")
          az vm create \
            --name $RUNNERNAME \
            --resource-group $RUNNERRG \
            --size Standard_B2ms \
            --assign-identity "[system]" \
            --image Canonical:0001-com-ubuntu-server-focal:20_04-lts:20.04.202205100 \
            --custom-data ./scripts/install-runner.sh \
            --generate-ssh-keys \
            --subnet $subnetId \
            --public-ip-addres \
            --nic-delete-option delete \
            --os-disk-delete-option delete \
            --nic-delete-option delete \
            --os-disk-delete-option delete \
            --nsg ""
          fi
            
      - name: Create Policy Exemptions for Runner
        if: inputs.action == 'Create'
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ inputs.runner_rg }}
          template: policy-exemptions/runner-policy-exemptions.json
          parameters: vmName=${{ inputs.runner_name }} builtinAssignment=${{ steps.values.outputs.spoke_subscription_id }}
          
      - name: Delete Runner VM
        if: inputs.action == 'Delete'
        run: | 
          az vm delete \
            --name $RUNNERNAME \
            --resource-group $RUNNERRG \
            --yes
